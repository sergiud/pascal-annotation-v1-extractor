name: Linux

on: [push, pull_request]

jobs:
  build:
    name: GCC-${{matrix.build_type}}
    runs-on: ubuntu-22.04
    strategy:
      fail-fast: true
      matrix:
          build_type: [Release, Debug]

    steps:
    - uses: actions/checkout@v3

    - name: Setup Dependencies
      shell: bash
      run: |
        sudo apt-get update
        DEBIAN_FRONTEND=noninteractive sudo apt-get install -y \
          build-essential \
          cmake \
          grep \
          libboost-chrono-dev \
          libboost-dev \
          libboost-filesystem-dev \
          libboost-program-options-dev \
          libboost-thread-dev \
          libopencv-dev \
          libtbb-dev \
          lcov \
          ninja-build \
          wget

    - name: Configure
      shell: bash
      run: |
        if [[ ${{matrix.build_type}} == "Debug" ]]; then
          export CXXFLAGS=--coverage
        fi
        cmake -S . -B build_${{matrix.build_type}} -G Ninja
    - name: Build
      run: |
        cmake --build build_${{matrix.build_type}} \
              --config ${{matrix.build_type}}
    - name: Test
      run: |
        ! ./build_${{matrix.build_type}}/pav1iet
        ! ./build_${{matrix.build_type}}/pav1iet does-not-exist
        ./build_${{matrix.build_type}}/pav1iet -h
        ./build_${{matrix.build_type}}/pav1iet -v
        ! ./build_${{matrix.build_type}}/pav1iet <(echo invalid annotations)
        ! echo invalid input | ./build_${{matrix.build_type}}/pav1iet -
        ./examples/prepare_INRIA_person_dataset.sh
        test $(grep 'Bounding box' ./INRIAPerson/Train/annotations/*.txt | wc -l) -eq 1237
        ./build_${{matrix.build_type}}/pav1iet ./INRIAPerson/Train-pos.lst -o 'train-%04i.png'
        test $(ls train-*.png | wc -l) -eq 1237
        test $(grep 'Bounding box' ./INRIAPerson/Test/annotations/*.txt | wc -l) -eq 589
        ./build_${{matrix.build_type}}/pav1iet ./INRIAPerson/Test-pos.lst -o 'test-%03i.png'
        test $(ls test-*.png | wc -l) -eq 589
    - name: Generate Covarage
      if: ${{ startswith(matrix.build_type, 'Debug') }}
      run: |
        lcov --directory . --capture --output-file coverage.info
        lcov --remove coverage.info 'test/*' '/usr/*' --output-file coverage.info
        lcov --list coverage.info

    - name: Upload Coverage to Codecov
      if: ${{ startswith(matrix.build_type, 'Debug') }}
      uses: codecov/codecov-action@v4
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        fail_ci_if_error: true
        verbose: true

    - name: Upload Coverage to Coveralls
      if: ${{ startswith(matrix.build_type, 'Debug') }}
      uses: coverallsapp/github-action@master
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        path-to-lcov: ./coverage.info
